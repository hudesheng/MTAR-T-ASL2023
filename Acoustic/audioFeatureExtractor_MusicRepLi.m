%%
% 
% $$e^{\pi i} + 1 = 0$$
% 
classdef audioFeatureExtractor_MusicRepLi < handle & ...
        matlab.mixin.CustomDisplay & ...
        matlab.mixin.SetGet & ...
        matlab.mixin.Copyable
    
    methods
        
        function featureVector=extract(obj,x)
            
            fs=16000;
            [audio_in,audioNames,dirType]=audioInfo_pre_loading(x);
            x=audio_in;
%% Proposed @2021
            [f0,loc] = pitch(x,fs,'Method','LHS','WindowLength',640,'OverlapLength',480);
            [fMIDI_V]=fo_embedding_interval_test_Ver2(f0);
            [musicTexture_vec]=music_texture_tag_test_plus_wordTag2(audioNames,fs,f0,loc,fMIDI_V,0,dirType);
            %[bfr_Interval,aft_Interval,bfr_IntvlMnzHt,aft_IntvlMnzHt,RLE_Notes]=Note_intervalTest(fMIDI_V,musicTexture_vec);
             
            [~,ex]=energyop(x,0);
            [TEO,S_teoInfo]=energy_short_timeTEO(ex,f0,fMIDI_V);
           
            [musicV2]=music_rep_emb_test(x,fs);
            [musicV2_melody]=music_rep_emb_melody_test(x,fs);
            [musicV2_Interval]=music_rep_emb_interval_test(musicV2,musicV2_melody);
            [S_ratiosV]=interval_ratios_embedding(musicTexture_vec,fMIDI_V);
            [primeFactorVec_and_StepVec_sel]=list_of_music_interval_demo(f0);
            
            [formantPeaks,~]=formant_CGDZP(x,fs,40,10);
            if size(formantPeaks,1)<length(f0)
                fAddV=ones(length(f0)-size(formantPeaks,1),5).*formantPeaks(1,:);
                formantPeaks=[fAddV;formantPeaks];
            end
            
            [fMIDI_V1]=fo_embedding_interval_test_Ver2(formantPeaks(:,1));
            [fMIDI_V2]=fo_embedding_interval_test_Ver2(formantPeaks(:,2));
            %[fMIDI_V3]=fo_embedding_interval_test_Ver2(formantPeaks(:,3));
            
            [frame_dur1]=music_frame_duration_tag(formantPeaks(:,1));
            [frame_dur2]=music_frame_duration_tag(formantPeaks(:,2));
            %[frame_dur3]=music_frame_duration_tag(formantPeaks(:,3));
            
            [S_ratiosV1]=interval_ratios_embedding(musicTexture_vec,fMIDI_V1);
            [S_ratiosV2]=interval_ratios_embedding(musicTexture_vec,fMIDI_V2);
            %[S_ratiosV3]=interval_ratios_embedding(musicTexture_vec,fMIDI_V3);
            
            [primeFactorVec_and_StepVec_sel1]=list_of_music_interval_demo(formantPeaks(:,1));
            [primeFactorVec_and_StepVec_sel2]=list_of_music_interval_demo(formantPeaks(:,2));
            %[primeFactorVec_and_StepVec_sel3]=list_of_music_interval_demo(formantPeaks(:,3));

            %featureVector=[ musicV2_Interval fMIDI_V RLE_Notes bfr_Interval aft_Interval bfr_IntvlMnzHt aft_IntvlMnzHt ...
            %    musicTexture_vec TEO S_teoInfo ];
  
%             featureVector=[ musicV2_Interval fMIDI_V(:,[1 2 3 4 6])  ...
%                 musicTexture_vec ...
%                 TEO S_teoInfo ...
%                 S_ratiosV(:,[ 1 2 3 4 5 7 8 9 10 ])...
%                 primeFactorVec_and_StepVec_sel(:,[1 3 4 5 6 7 8 9 13])...
%                 fMIDI_V1(:,[1 2 3 4 6])...
%                 fMIDI_V2(:,[1 2 3 4 6])...
%                 fMIDI_V3(:,[1 2 3 4 6])...
%                 frame_dur1 frame_dur2 frame_dur3...
%                 S_ratiosV1(:,[ 1 2 3 4 5 7 8 9 10 ])...
%                 S_ratiosV2(:,[ 1 2 3 4 5 7 8 9 10 ])...
%                 S_ratiosV3(:,[ 1 2 3 4 5 7 8 9 10 ])...
%                 primeFactorVec_and_StepVec_sel1(:,[1 3 4 5 6 7 8 9 13])...
%                 primeFactorVec_and_StepVec_sel2(:,[1 3 4 5 6 7 8 9 13])...
%                 primeFactorVec_and_StepVec_sel3(:,[1 3 4 5 6 7 8 9 13])...
%                 ];

%             featureVector=[ musicV2_Interval fMIDI_V...
%                 musicTexture_vec ...
%                 TEO S_teoInfo ...
%                 S_ratiosV(:,[ 1 2 3 7 8 9 10 ])...
%                 primeFactorVec_and_StepVec_sel(:,[1 7 8 9 13])...
%                 fMIDI_V1...
%                 fMIDI_V2...
%                 fMIDI_V3...
%                 frame_dur1 frame_dur2 frame_dur3...
%                 S_ratiosV1(:,[ 1 2 3 7 8 9 10 ])...
%                 S_ratiosV2(:,[ 1 2 3 7 8 9 10 ])...
%                 S_ratiosV3(:,[ 1 2 3 7 8 9 10 ])...
%                 primeFactorVec_and_StepVec_sel1(:,[1 7 8 9 13])...
%                 primeFactorVec_and_StepVec_sel2(:,[1 7 8 9 13])...
%                 primeFactorVec_and_StepVec_sel3(:,[1 7 8 9 13])...
%                 ];
%             featureVector=[ musicV2_Interval fMIDI_V...
%                 musicTexture_vec ...
%                 TEO S_teoInfo ...
%                 S_ratiosV(:,[ 1 2 3 7 8 9 10 ])...
%                 primeFactorVec_and_StepVec_sel(:,[1 7 8 9 13])...
%                 fMIDI_V1...
%                 fMIDI_V2...
%                 frame_dur1 frame_dur2 ...
%                 S_ratiosV1(:,[ 1 2 3 7 8 9 10 ])...
%                 S_ratiosV2(:,[ 1 2 3 7 8 9 10 ])...
%                 primeFactorVec_and_StepVec_sel1(:,[1 7 8 9 13])...
%                 primeFactorVec_and_StepVec_sel2(:,[1 7 8 9 13])...
%                 ];%==76.8%
            featureVector=[ musicV2_Interval fMIDI_V...
                musicTexture_vec ...
                S_ratiosV(:,[ 1 2 3 ])...
                primeFactorVec_and_StepVec_sel(:,[1 7 8 9 13])...
                fMIDI_V1...
                fMIDI_V2...
                frame_dur1 frame_dur2 ...
                S_ratiosV1(:,[ 1 2 3 ])...
                S_ratiosV2(:,[ 1 2 3 ])...
                primeFactorVec_and_StepVec_sel1(:,[1 7 8 9 13])...
                primeFactorVec_and_StepVec_sel2(:,[1 7 8 9 13])...
                ];


% %% melSpectrogeam baseline-1:
%             [mel_base]=mel_base_res01(x,fs);
%             featureVector=mel_base;

% %% mfcc baseline-2:
%             [mfcc_base]=mfcc_base_res02(x,fs);
%             featureVector=mfcc_base;

% %% VGGish baseline-3:
%             [vggish_base]=vggish_base_res03(x,fs);
%             featureVector=vggish_base;

% %% spectrogram baseline-4:
%             [spectr_base]=spectr_base_res04(x);
%             featureVector=spectr_base;
             
        end
          
    end
    
end